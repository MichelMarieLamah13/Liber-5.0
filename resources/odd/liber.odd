<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:vg="http://www.vangoghletters.org/ns/" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Liber Project</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="liber.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2023-07-21+02:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="liber" source="teipublisher.odd"> 
                <elementSpec ident="TEI" mode="change"><model output="latex" behaviour="section">
            <param name="title" value="teiHeader/fileDesc/titleStmt/title"/>
            <param name="date" value="teiHeader/fileDesc/sourceDesc/vg:letDesc/vg:letHeading/vg:dateLet"/>
            <param name="header" value="teiHeader"/>
            <param name="content" value=".//div[@type='original']"/>
            <param name="translation" value=".//div[@type='translation']"/>
            <param name="styles" value="$config('latex-styles')"/>
            <pb:template xmlns="" xml:space="preserve">
                            \documentclass[10pt,a4paper,twoside]{article}
                            \usepackage[a4paper, twoside, top=25mm, bottom=35mm, outer=40mm, inner=20mm, heightrounded, marginparwidth=25mm, marginparsep=5mm]{geometry}
                            \usepackage[french,english]{babel}
                            \usepackage{hyperref}
                            
                            \usepackage{fancyhdr,extramarks,xifthen}
                            \pagestyle{fancy}
                            
                            \fancyhf{}
                            \fancyhead[LO,RE]{\footnotesize [[title]]}
                            \fancyhead[LE,RO]{\footnotesize\thepage}
                            
                            [[styles]]
                            
                            \setlength{\parindent}{0}
                            
                            \begin{document}
                            
                            \title{[[title]]}
                            \date{[[date]]}}
                            \maketitle
                            
                            \selectlanguage{english}
                            \section*{Metadata}
                            
                            [[header]]
                            
                            \section*{Original}
                            \selectlanguage{french}
                            [[content]]
                            
                            \selectlanguage{english}
                            \section*{Translation}
                            [[translation]]
                            
                            \end{document}</pb:template>
        </model><model output="fo" behaviour="document">
            <param name="content" value="(teiHeader,.//div[@type='original'], .//div[@type='translation'])"/>
        </model><model behaviour="document"/></elementSpec>
                <elementSpec ident="pb" mode="change"><model output="latex" behaviour="inline">
            <param name="content" value="'[' || @f || ':' || @n || ']'"/>
            <pb:template xmlns="" xml:space="preserve">\marginpar{[[content]]}</pb:template>
        </model><model output="print" behaviour="inline">
            <param name="content" value="'[' || @f || ':' || @n || ']'"/>
        </model><model predicate="starts-with(@facs, 'iiif:')" behaviour="webcomponent" useSourceRendition="true">
            <param name="facs" value="'http://localhost:8080/exist/apps/Liber/facs/' || replace(@facs, '^iiif:(.*)$', '$1')"/>
            <param name="name" value="'pb-facs-link'"/>
            <param name="emit" value="'transcription'"/>
        </model><model predicate="starts-with(@facs, '#')" behaviour="webcomponent" useSourceRendition="true">
            <param name="content" value="@f || ':' || @n"/>
            <param name="facs" value="let $zone := id(substring-after(@facs, '#'), root($parameters?root)) return  'http://vangoghletters.org/vg/facsimiles/' ||     $zone/graphic[@mimeType=&#34;image/png&#34;]/@url"/>
            <param name="name" value="'pb-facs-link'"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            font-size: .85em;
                        background-color: #C0C0C0;
                        border-left: 1px solid black;
                        border-right: 1px solid black;
                        padding: 0 1em;
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="ab" mode="change"><model output="web" predicate="$parameters?p_synch='on'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@xml:id, '^\w\.(.*)$', '$1')"/>
            <param name="highlight-self" value="true"/>
            <param name="scroll" value="true"/>
        </model><model output="web" predicate="$parameters?p_synch='off'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@xml:id, '^\w\.(.*)$', '$1')"/>
            <param name="highlight-self" value="true"/>
        </model><model output="print" predicate="@rend='indent'" behaviour="paragraph">
            <outputRendition xml:space="preserve">
            text-indent: 5mm;
            </outputRendition>
        </model><model output="print" behaviour="paragraph"/><model predicate="(ancestor::div[@type='translation'] or $parameters?view='normalized') and @rend='indent'" behaviour="paragraph">
            <outputRendition xml:space="preserve">
            text-indent: 20px;
            </outputRendition>
        </model><model predicate="ancestor::div[@type='translation'] or $parameters?view='normalized'" behaviour="paragraph"/><model predicate="@rend='indent'" behaviour="inline">
            <outputRendition xml:space="preserve">
            
            display: inline-block;
                        text-indent: 20px;
            
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="c" mode="change"><model predicate="@type='kk'" behaviour="inline">
            <param name="content" value="','"/>
        </model><model predicate="@type='kp'" behaviour="inline">
            <param name="content" value="'.'"/>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="anchor" mode="change"><model behaviour="note">
            <param name="label" value="@n/string()"/>
            <param name="content" value="let $n := @n return $get(.)/ancestor::TEI//div[@type='notes']//note[@n=$n]/node()"/>
            <outputRendition xml:space="preserve">
            
            
            font-size: .85em;
                        background-color: #C0C0C0;
                        padding: 0 .25em;
                        border-right: 1px solid black;
                        text-indent: 0;
                        margin: 0 .25em;
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="teiHeader" mode="change"><model output="latex" behaviour="block">
            <param name="content" value=".//sourceDesc//vg:letDesc"/>
        </model><modelSequence output="fo">
            <model behaviour="heading">
                <param name="content" value="fileDesc/titleStmt/title"/>
                <param name="level" value="1"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Metadata'"/>
                <param name="level" value="2"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//sourceDesc//vg:letDesc"/>
            </model>
        </modelSequence><model predicate="$parameters?view='metadata'" behaviour="block" cssClass="metadata">
            <outputRendition xml:space="preserve">
            font-size: .85em;
            </outputRendition>
        </model><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model output="web" predicate="$parameters?header='letter'" behaviour="inline">
            <param name="content" value="fileDesc/titleStmt/title"/>
            <param name="level" value="5"/>
        </model></elementSpec>
                <elementSpec ident="note" mode="change"><model predicate="$parameters?view='notes'" behaviour="listItem">
            <param name="n" value="@n"/>
        </model><model behaviour="block"/></elementSpec>
                <elementSpec ident="div" mode="change"><modelSequence output="fo" predicate="@type='original'">
            <model behaviour="heading">
                <param name="content" value="'Original'"/>
                <param name="level" value="2"/>
            </model>
            <model behaviour="block"/>
        </modelSequence><modelSequence output="fo" predicate="@type='translation'">
            <model behaviour="heading">
                <param name="content" value="'Translation'"/>
                <param name="level" value="2"/>
            </model>
            <model behaviour="block"/>
        </modelSequence><model predicate="$parameters?view='notes'" behaviour="list">
            <param name="content" value=".//app/rdg"/>
            <param name="type" value="'ordered'"/>
        </model><model predicate="@type='textualNotes'" behaviour="omit"/><model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model><model predicate="parent::body or parent::front or parent::back" behaviour="section"/><model behaviour="block"/></elementSpec>
                <elementSpec ident="lb" mode="change"><model output="latex" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">\\</pb:template>
        </model><model predicate="$parameters?view='normalized'" behaviour="omit">
            <pb:template xmlns="" xml:space="preserve">\\</pb:template>
        </model><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model></elementSpec>
                <elementSpec ident="ref" mode="change"><model predicate="not(@target)" behaviour="inline"/><model behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="vg:letHeading" mode="add"/>
                <elementSpec ident="vg:letDesc" mode="add"><modelSequence>
            <model behaviour="heading">
                <param name="content" value="'Source status:'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='sourceStatus']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Location:'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='location']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Date:'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='date']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Additional:'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='additionalDetail']/node()"/>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="facsimile" mode="add"/>
                <elementSpec ident="surface" mode="add"><model output="print" behaviour="omit"/></elementSpec>
                <elementSpec ident="vg:whiteline"><model behaviour="break">
            <param name="type" value="'column'"/>
        </model></elementSpec>
            <elementSpec ident="persName" mode="add"><model predicate="$parameters?view='metadata'" behaviour="inline"/><model predicate="$parameters?view='notes'" behaviour="inline"/><model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="let $id:=substring-after(@ref, '#') return root($parameters?root)//person[@xml:id=$id]"/>
            <outputRendition xml:space="preserve">
            
            
            font-weight: bold;
color: blue;
            
            
            </outputRendition>
        </model></elementSpec><elementSpec ident="person" mode="add"><model predicate="$parameters?view='metadata'" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model><modelSequence>
            <model behaviour="block">
                <param name="content" value="persName"/>
            </model>
        </modelSequence></elementSpec><elementSpec ident="profileDesc" mode="change"><model predicate="$parameters?view='metadata'" behaviour="block">
            <param name="personnes" value="particDesc/listPerson/person"/>
            <param name="places" value="settingDesc/listPlace/place"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <div><h3>Lieux</h3><ol>[[places]]</ol></div>
  <div><h3>Personnes</h3><ol>[[personnes]]</ol></div>
</div></pb:template>
        </model></elementSpec><elementSpec ident="place" mode="add"><model predicate="$parameters?view='metadata'" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model></elementSpec><elementSpec ident="sourceDesc" mode="add"><model predicate="$parameters?view='metadata'" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve"><div><h3>Sources</h3><ol>[[content]]</ol></div></pb:template>
        </model></elementSpec><elementSpec ident="fileDesc" mode="change"><model predicate="$parameters?view='metadata'" behaviour="inline"/><modelSequence predicate="$parameters?header='short'">
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="titleStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="editionStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="publicationStmt"/>
            </model>
        </modelSequence><model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model></elementSpec><elementSpec ident="listWit" mode="add"><model predicate="$parameters?view='metadata'" behaviour="block"/></elementSpec><elementSpec ident="p" mode="change"><model predicate="$parameters?view='metadata'" behaviour="inline"/><model output="print" predicate="ancestor::note" behaviour="inline"/><model behaviour="paragraph" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            text-align: justify;
            </outputRendition>
        </model></elementSpec><elementSpec ident="witness" mode="add"><model predicate="$parameters?view='metadata'" behaviour="block">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model><model behaviour="inline">
            <param name="content" value="."/>
            <outputRendition xml:space="preserve">
            font-weight: bold;
margin-right:.5rem;
            </outputRendition>
        </model></elementSpec><elementSpec ident="titleStmt" mode="change"><model predicate="$parameters?view='metadata'" behaviour="block">
            <param name="authors" value="author"/>
            <param name="title" value="title"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <h2>[[title]]</h2>
  <h3>Auteurs</h3><ul>[[authors]]</ul>
</div></pb:template>
        </model><model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model><model output="fo" behaviour="heading"/><model predicate="$parameters?mode='title'" behaviour="heading">
            <param name="content" value="title[not(@type)]"/>
            <param name="level" value="5"/>
        </model><modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subsequence(title, 2)"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence><model output="web" behaviour="block"/></elementSpec><elementSpec ident="author" mode="change"><model predicate="$parameters?view='metadata'" behaviour="block">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model><model predicate="ancestor::teiHeader" behaviour="block"/><model behaviour="inline"/></elementSpec><elementSpec ident="publicationStmt" mode="change"><model predicate="$parameters?view='metadata'" behaviour="block">
            <param name="date" value="p/origDate"/>
            <param name="langue" value="p/lang"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <h3>Publication</h3>
  <ul>
    <li>[[date]], [[langue]]</li>
  </ul>
</div></pb:template>
        </model><model output="web" behaviour="block">
            <param name="content" value="availability/licence"/>
        </model><model behaviour="omit"/></elementSpec><elementSpec ident="origDate" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight:bold;
            </outputRendition>
        </model></elementSpec><elementSpec ident="rdg" mode="add"><model predicate="$parameters?view='notes'" behaviour="listItem">
            <param name="content" value="."/>
            <param name="witnesses" value="let $ids := tokenize(replace(@wit, '#', ''),'\s+') for $id in $ids return root($parameters?root)//witness[@xml:id=$id]"/>
            <pb:template xmlns="" xml:space="preserve"><div><span>[[witnesses]]</span>[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model behaviour="note">
            <param name="wit" value="@wit"/>
            <param name="witnesses" value="let $ids := tokenize(replace(@wit, '#', ''),'\s+') for $id in $ids return root($parameters?root)//witness[@xml:id=$id]"/>
            <pb:template xmlns="" xml:space="preserve"><div><span>[[witnesses]]</span>[[content]]</div></pb:template>
        </model></elementSpec><elementSpec ident="app" mode="add"><model predicate="$parameters?view='notes'" behaviour="listItem">
            <param name="lemWit" value="replace(replace(lem/@wit, '#', ''), ' ', ',  ')"/>
            <param name="rdgs" value="rdg"/>
            <param name="lemContent" value="lem  || ' '"/>
            <pb:template xmlns="" xml:space="preserve"><div><h3>[[lemContent]] [[lemWit]] ]</h3> [[rdgs]]</div></pb:template>
        </model></elementSpec><elementSpec ident="head" mode="change"><model behaviour="heading">
            <param name="level" value="3"/>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model><model behaviour="block"/></elementSpec></schemaSpec>
            
        </body>
    </text></TEI>